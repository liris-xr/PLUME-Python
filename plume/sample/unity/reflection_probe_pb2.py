# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: plume/sample/unity/reflection_probe.proto
# Protobuf Python Version: 5.29.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    3,
    '',
    'plume/sample/unity/reflection_probe.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from plume.sample.unity import identifiers_pb2 as plume_dot_sample_dot_unity_dot_identifiers__pb2
from plume.sample.common import bounds_pb2 as plume_dot_sample_dot_common_dot_bounds__pb2
from plume.sample.common import color_pb2 as plume_dot_sample_dot_common_dot_color__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n)plume/sample/unity/reflection_probe.proto\x12\x12plume.sample.unity\x1a$plume/sample/unity/identifiers.proto\x1a plume/sample/common/bounds.proto\x1a\x1fplume/sample/common/color.proto\"^\n\x15ReflectionProbeCreate\x12\x45\n\tcomponent\x18\x01 \x01(\x0b\x32\'.plume.sample.unity.ComponentIdentifierR\tcomponent\"_\n\x16ReflectionProbeDestroy\x12\x45\n\tcomponent\x18\x01 \x01(\x0b\x32\'.plume.sample.unity.ComponentIdentifierR\tcomponent\"\x9f\x0c\n\x15ReflectionProbeUpdate\x12\x45\n\tcomponent\x18\x01 \x01(\x0b\x32\'.plume.sample.unity.ComponentIdentifierR\tcomponent\x12\x1d\n\x07\x65nabled\x18\x02 \x01(\x08H\x00R\x07\x65nabled\x88\x01\x01\x12@\n\x04mode\x18\x03 \x01(\x0e\x32\'.plume.sample.unity.ReflectionProbeModeH\x01R\x04mode\x88\x01\x01\x12V\n\x0crefresh_mode\x18\x04 \x01(\x0e\x32..plume.sample.unity.ReflectionProbeRefreshModeH\x02R\x0brefreshMode\x88\x01\x01\x12\x63\n\x11time_slicing_mode\x18\x05 \x01(\x0e\x32\x32.plume.sample.unity.ReflectionProbeTimeSlicingModeH\x03R\x0ftimeSlicingMode\x88\x01\x01\x12S\n\x0b\x63lear_flags\x18\x06 \x01(\x0e\x32-.plume.sample.unity.ReflectionProbeClearFlagsH\x04R\nclearFlags\x88\x01\x01\x12#\n\nimportance\x18\x07 \x01(\x05H\x05R\nimportance\x88\x01\x01\x12!\n\tintensity\x18\x08 \x01(\x02H\x06R\tintensity\x88\x01\x01\x12+\n\x0fnear_clip_plane\x18\t \x01(\x02H\x07R\rnearClipPlane\x88\x01\x01\x12)\n\x0e\x66\x61r_clip_plane\x18\n \x01(\x02H\x08R\x0c\x66\x61rClipPlane\x88\x01\x01\x12\x39\n\x16render_dynamic_objects\x18\x0b \x01(\x08H\tR\x14renderDynamicObjects\x88\x01\x01\x12*\n\x0e\x62ox_projection\x18\x0c \x01(\x08H\nR\rboxProjection\x88\x01\x01\x12*\n\x0e\x62lend_distance\x18\r \x01(\x02H\x0bR\rblendDistance\x88\x01\x01\x12\x38\n\x06\x62ounds\x18\x0e \x01(\x0b\x32\x1b.plume.sample.common.BoundsH\x0cR\x06\x62ounds\x88\x01\x01\x12#\n\nresolution\x18\x0f \x01(\x05H\rR\nresolution\x88\x01\x01\x12\x15\n\x03hdr\x18\x10 \x01(\x08H\x0eR\x03hdr\x88\x01\x01\x12,\n\x0fshadow_distance\x18\x11 \x01(\x02H\x0fR\x0eshadowDistance\x88\x01\x01\x12J\n\x10\x62\x61\x63kground_color\x18\x12 \x01(\x0b\x32\x1a.plume.sample.common.ColorH\x10R\x0f\x62\x61\x63kgroundColor\x88\x01\x01\x12&\n\x0c\x63ulling_mask\x18\x13 \x01(\x05H\x11R\x0b\x63ullingMask\x88\x01\x01\x12Z\n\x14\x63ustom_baked_texture\x18\x14 \x01(\x0b\x32#.plume.sample.unity.AssetIdentifierH\x12R\x12\x63ustomBakedTexture\x88\x01\x01\x12M\n\rbaked_texture\x18\x15 \x01(\x0b\x32#.plume.sample.unity.AssetIdentifierH\x13R\x0c\x62\x61kedTexture\x88\x01\x01\x42\n\n\x08_enabledB\x07\n\x05_modeB\x0f\n\r_refresh_modeB\x14\n\x12_time_slicing_modeB\x0e\n\x0c_clear_flagsB\r\n\x0b_importanceB\x0c\n\n_intensityB\x12\n\x10_near_clip_planeB\x11\n\x0f_far_clip_planeB\x19\n\x17_render_dynamic_objectsB\x11\n\x0f_box_projectionB\x11\n\x0f_blend_distanceB\t\n\x07_boundsB\r\n\x0b_resolutionB\x06\n\x04_hdrB\x12\n\x10_shadow_distanceB\x13\n\x11_background_colorB\x0f\n\r_culling_maskB\x17\n\x15_custom_baked_textureB\x10\n\x0e_baked_texture*|\n\x13ReflectionProbeMode\x12\x1f\n\x1bREFLECTION_PROBE_MODE_BAKED\x10\x00\x12 \n\x1cREFLECTION_PROBE_MODE_CUSTOM\x10\x01\x12\"\n\x1eREFLECTION_PROBE_MODE_REALTIME\x10\x02*r\n\x19ReflectionProbeClearFlags\x12\'\n#REFLECTION_PROBE_CLEAR_FLAGS_SKYBOX\x10\x00\x12,\n(REFLECTION_PROBE_CLEAR_FLAGS_SOLID_COLOR\x10\x01*\xa8\x01\n\x1aReflectionProbeRefreshMode\x12*\n&REFLECTION_PROBE_REFRESH_MODE_ON_AWAKE\x10\x00\x12-\n)REFLECTION_PROBE_REFRESH_MODE_EVERY_FRAME\x10\x01\x12/\n+REFLECTION_PROBE_REFRESH_MODE_VIA_SCRIPTING\x10\x02*\xcb\x01\n\x1eReflectionProbeTimeSlicingMode\x12\x38\n4REFLECTION_PROBE_TIME_SLICING_MODE_ALL_FACES_AT_ONCE\x10\x00\x12\x37\n3REFLECTION_PROBE_TIME_SLICING_MODE_INDIVIDUAL_FACES\x10\x01\x12\x36\n2REFLECTION_PROBE_TIME_SLICING_MODE_NO_TIME_SLICING\x10\x02\x42\x15\xaa\x02\x12PLUME.Sample.Unityb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'plume.sample.unity.reflection_probe_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\252\002\022PLUME.Sample.Unity'
  _globals['_REFLECTIONPROBEMODE']._serialized_start=1933
  _globals['_REFLECTIONPROBEMODE']._serialized_end=2057
  _globals['_REFLECTIONPROBECLEARFLAGS']._serialized_start=2059
  _globals['_REFLECTIONPROBECLEARFLAGS']._serialized_end=2173
  _globals['_REFLECTIONPROBEREFRESHMODE']._serialized_start=2176
  _globals['_REFLECTIONPROBEREFRESHMODE']._serialized_end=2344
  _globals['_REFLECTIONPROBETIMESLICINGMODE']._serialized_start=2347
  _globals['_REFLECTIONPROBETIMESLICINGMODE']._serialized_end=2550
  _globals['_REFLECTIONPROBECREATE']._serialized_start=170
  _globals['_REFLECTIONPROBECREATE']._serialized_end=264
  _globals['_REFLECTIONPROBEDESTROY']._serialized_start=266
  _globals['_REFLECTIONPROBEDESTROY']._serialized_end=361
  _globals['_REFLECTIONPROBEUPDATE']._serialized_start=364
  _globals['_REFLECTIONPROBEUPDATE']._serialized_end=1931
# @@protoc_insertion_point(module_scope)
